name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-coverage-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: make test
        id: test_status
        continue-on-error: ${{ github.evnte_name == 'pull_request' }}
        env:
          TEST_TARGET: "./..."
          TEST_ARGS: "-timeout 12m -race -coverprofile=./coverage.out -covermode=atomic -v"

      - name: filter out DONTCOVER
        if: github.event_name == 'pull_request'
        run: |
          excludelist="$(find ./ -type f -name '*.go' | xargs grep -l 'DONTCOVER')"
          excludelist+=" $(find ./ -type f -name '*.pb.go')"
          excludelist+=" $(find ./ -type f -path './tests/mocks/*.go')"
          for filename in ${excludelist}; do
            filename=$(echo $filename | sed 's/^./github.com\/cosmos\/cosmos-sdk/g')
            echo "Excluding ${filename} from coverage report..."
            sed -i "/$(echo $filename | sed 's/\//\\\//g')/d" ./coverage.out
          done

      - name: Convert coverage to lcov
        if: github.evnte_name == 'pull_request'
        uses: jandelgado/gcov2lcov-action@v1

      - name: Code Coverage Report
        if: github.event_name == 'pull_request'
        uses: vebr/jest-lcov-reporter@v0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: coverage.lcov

      - name: fail CI if test was failed
        if: ${{ steps.test_status.outputs.status == 'failure' }}
        run: |
          false
