syntax = "proto3";

package persistence_sdk.modules.maintainers.internal.queries.maintainer;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "persistence_sdk/schema/types/base/id.proto";

option go_package = "github.com/persistenceOne/persistenceSDK/modules/maintainers/internal/queries/maintainer";

message QueryRequest {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  persistence_sdk.schema.types.base.ID maintainer_i_d = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "valid:\"required~required MaintainerID missing\""];
}

message QueryResponse {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  bool success = 1;
  string error = 2 ;
  repeated string list = 3 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/helpers.Mappable", (gogoproto.nullable) = false] ;

}

service Query {
  rpc Enquire(QueryRequest) returns (QueryResponse) {
    option (google.api.http).get = "/persistence/maintainers/maintainer";
  }
}
