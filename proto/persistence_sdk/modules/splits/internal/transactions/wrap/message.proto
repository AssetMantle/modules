syntax = "proto3";

package persistence_sdk.modules.splits.internal.transactions.wrap;

import "gogoproto/gogo.proto";

option go_package = "github.com/persistenceOne/persistenceSDK/modules/splits/internal/transactions/wrap";

service Msg {
  rpc Wrap(Message) returns (TransactionResponse) {};
}

message Message {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  string from = 1 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types/base.AccAddress", (gogoproto.nullable) = false, (gogoproto.moretags) = 'valid:"required~required field From missing"'] ;
  string from_i_d = 2 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.ID", (gogoproto.nullable) = false, (gogoproto.moretags) = 'valid:"required~required field FromID missing"'] ;
  repeated string coins = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false, (gogoproto.moretags) = 'valid:"required~required field Coins missing"', (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message TransactionResponse {}
