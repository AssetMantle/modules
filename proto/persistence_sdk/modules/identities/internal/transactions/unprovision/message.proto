syntax = "proto3";

package persistence_sdk.modules.identities.internal.transactions.unprovision;

import "gogoproto/gogo.proto";

option go_package = "github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/unprovision";

message Message {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.equal) = false;

  string from = 1 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types/base.AccAddress", (gogoproto.nullable) = false, (gogoproto.moretags) = "valid:\"required~required From missing\""] ;
  string to = 2 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types/base.AccAddress", (gogoproto.nullable) = false, (gogoproto.moretags) = "valid:\"required~required field To missing, matches(^[a-z0-9]*$)~invalid field To\""] ;
  string identity_i_d = 3 [(gogoproto.customtype) = "github.com/persistenceOne/persistenceSDK/schema/types.ID", (gogoproto.nullable) = false, (gogoproto.moretags) = "valid:\"required~required IdentityID missing\""];
}

message TransactionResponse{}

service Msg{
  rpc Unprovision(Message) returns (TransactionResponse){};
}
