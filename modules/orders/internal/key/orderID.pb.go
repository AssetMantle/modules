// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: persistence_sdk/orders/internal/key/orderID.proto

package key

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type OrderID struct {
	ClassificationID github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,1,opt,name=classification_i_d,json=classificationID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"classification_i_d"`
	MakerOwnableID   github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,2,opt,name=maker_ownable_i_d,json=makerOwnableID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"maker_ownable_i_d"`
	TakerOwnableID   github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,3,opt,name=taker_ownable_i_d,json=takerOwnableID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"taker_ownable_i_d"`
	RateID           github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,4,opt,name=rate_i_d,json=rateID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"rate_i_d"`
	CreationID       github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,5,opt,name=creation_i_d,json=creationID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"creation_i_d"`
	MakerID          github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,6,opt,name=maker_i_d,json=makerID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"maker_i_d"`
	HashID           github_com_persistenceOne_persistenceSDK_schema_types.ID `protobuf:"bytes,7,opt,name=hash_i_d,json=hashID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"hash_i_d"`
}

func (m *OrderID) Reset()      { *m = OrderID{} }
func (*OrderID) ProtoMessage() {}
func (*OrderID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec51fe31552dc552, []int{0}
}
func (m *OrderID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderID.Unmarshal(m, b)
}
func (m *OrderID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderID.Marshal(b, m, deterministic)
}
func (m *OrderID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderID.Merge(m, src)
}
func (m *OrderID) XXX_Size() int {
	return xxx_messageInfo_OrderID.Size(m)
}
func (m *OrderID) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderID.DiscardUnknown(m)
}

var xxx_messageInfo_OrderID proto.InternalMessageInfo

func init() {
	proto.RegisterType((*OrderID)(nil), "orders.internal.key.OrderID")
}

func init() {
	proto.RegisterFile("persistence_sdk/orders/internal/key/orderID.proto", fileDescriptor_ec51fe31552dc552)
}

var fileDescriptor_ec51fe31552dc552 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xbf, 0x4e, 0xeb, 0x30,
	0x14, 0x87, 0x9d, 0x7b, 0x6f, 0xdb, 0x5b, 0xeb, 0xea, 0xaa, 0x04, 0x06, 0xc4, 0x90, 0x20, 0x26,
	0xa6, 0x44, 0x88, 0x05, 0x31, 0xa1, 0xca, 0x4b, 0xc4, 0x50, 0x09, 0xb6, 0x0a, 0x11, 0x39, 0xc9,
	0xa1, 0xb1, 0x92, 0xd8, 0x95, 0xed, 0x0a, 0xf5, 0x0d, 0x18, 0x3b, 0x32, 0xb6, 0x6f, 0xd3, 0xb1,
	0x23, 0x62, 0x28, 0xa8, 0x7d, 0x11, 0x94, 0x58, 0x15, 0xad, 0x60, 0x60, 0xc8, 0xe6, 0x3f, 0x3f,
	0x7f, 0x9f, 0x75, 0x8e, 0x0e, 0x3e, 0x1b, 0x82, 0x54, 0x4c, 0x69, 0xe0, 0x31, 0x84, 0x2a, 0xc9,
	0x7c, 0x21, 0x13, 0x90, 0xca, 0x67, 0x5c, 0x83, 0xe4, 0x34, 0xf7, 0x33, 0x18, 0x9b, 0xb3, 0x80,
	0x78, 0x43, 0x29, 0xb4, 0xb0, 0xf7, 0x4d, 0xc4, 0xdb, 0x44, 0xbc, 0x0c, 0xc6, 0x47, 0x07, 0x03,
	0x31, 0x10, 0xd5, 0xbd, 0x5f, 0xae, 0x4c, 0xf4, 0xe4, 0xad, 0x81, 0x5b, 0x3d, 0xf3, 0xd8, 0xe6,
	0xd8, 0x8e, 0x73, 0xaa, 0x14, 0x7b, 0x60, 0x31, 0xd5, 0x4c, 0xf0, 0x90, 0x85, 0xc9, 0xa1, 0x75,
	0x6c, 0x9d, 0xb6, 0xbb, 0x57, 0xf3, 0xa5, 0x8b, 0x5e, 0x97, 0xee, 0xc5, 0x80, 0xe9, 0x74, 0x14,
	0x79, 0xb1, 0x28, 0xfc, 0xad, 0x8f, 0xf5, 0x38, 0x6c, 0x6f, 0x6f, 0xc9, 0xb5, 0xaf, 0xe2, 0x14,
	0x0a, 0xea, 0xeb, 0xf1, 0x10, 0x94, 0x17, 0x90, 0x9b, 0xce, 0x2e, 0x3b, 0x20, 0x76, 0x86, 0xf7,
	0x0a, 0x9a, 0x81, 0x0c, 0xc5, 0x23, 0xa7, 0x51, 0x0e, 0x95, 0xee, 0x57, 0x4d, 0xba, 0xff, 0x15,
	0xba, 0x67, 0xc8, 0x46, 0xa6, 0xbf, 0xc8, 0x7e, 0xd7, 0x25, 0xd3, 0xbb, 0xb2, 0x3e, 0xfe, 0x2b,
	0xa9, 0x36, 0x8e, 0x3f, 0x35, 0x39, 0x9a, 0x25, 0x31, 0x20, 0x76, 0x84, 0xff, 0xc5, 0x12, 0x3e,
	0xfb, 0xd3, 0xa8, 0x89, 0x8f, 0x37, 0xd4, 0x80, 0xd8, 0x77, 0xb8, 0x6d, 0x3a, 0x53, 0x0a, 0x9a,
	0x35, 0x09, 0x5a, 0x15, 0xd2, 0x54, 0x27, 0xa5, 0x2a, 0xad, 0xe0, 0xad, 0xba, 0xaa, 0x53, 0x12,
	0x03, 0x72, 0xd9, 0x79, 0x9e, 0xba, 0xe8, 0x69, 0xe6, 0xa2, 0xc9, 0xcc, 0x45, 0xd3, 0x99, 0x8b,
	0xba, 0xf7, 0xf3, 0x95, 0x63, 0x2d, 0x56, 0x8e, 0xf5, 0xbe, 0x72, 0xac, 0xc9, 0xda, 0x41, 0x8b,
	0xb5, 0x83, 0x5e, 0xd6, 0x0e, 0xea, 0x93, 0x1f, 0xdb, 0x0a, 0x91, 0x8c, 0x72, 0x50, 0xdf, 0x8d,
	0x5e, 0xd4, 0xac, 0x06, 0xe9, 0xfc, 0x23, 0x00, 0x00, 0xff, 0xff, 0x86, 0xca, 0xc8, 0xbc, 0xa8,
	0x03, 0x00, 0x00,
}
