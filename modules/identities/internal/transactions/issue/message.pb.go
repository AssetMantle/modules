// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: persistence_sdk/modules/identities/internal/transactions/issue/message.proto

package issue

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	github_com_persistenceOne_persistenceSDK_schema_types_base "github.com/persistenceOne/persistenceSDK/schema/types/base"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	From                    github_com_persistenceOne_persistenceSDK_schema_types_base.AccAddress `protobuf:"bytes,1,opt,name=from,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types/base.AccAddress" json:"from" valid:"required~required field From missing"`
	To                      github_com_persistenceOne_persistenceSDK_schema_types_base.AccAddress `protobuf:"bytes,2,opt,name=to,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types/base.AccAddress" json:"to" valid:"required~required field To missing, matches(^[a-z0-9]*$)~invalid field To"`
	FromID                  github_com_persistenceOne_persistenceSDK_schema_types.ID              `protobuf:"bytes,3,opt,name=from_i_d,json=fromID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"from_i_d" valid:"required~required field FromID missing"`
	ClassificationID        github_com_persistenceOne_persistenceSDK_schema_types.ID              `protobuf:"bytes,4,opt,name=classification_i_d,json=classificationID,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"classification_i_d" valid:"required~required field ClassificationID missing"`
	ImmutableMetaProperties github_com_persistenceOne_persistenceSDK_schema_types.MetaProperties  `protobuf:"bytes,5,opt,name=immutable_meta_properties,json=immutableMetaProperties,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.MetaProperties" json:"immutable_meta_properties" valid:"required~required field ImmutableMetaProperties missing"`
	ImmutableProperties     github_com_persistenceOne_persistenceSDK_schema_types.Properties      `protobuf:"bytes,6,opt,name=immutable_properties,json=immutableProperties,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Properties" json:"immutable_properties" valid:"required~required field ImmutableProperties missing"`
	MutableMetaProperties   github_com_persistenceOne_persistenceSDK_schema_types.MetaProperties  `protobuf:"bytes,7,opt,name=mutable_meta_properties,json=mutableMetaProperties,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.MetaProperties" json:"mutable_meta_properties" valid:"required~required field MutableMetaProperties missing"`
	MutableProperties       github_com_persistenceOne_persistenceSDK_schema_types.Properties      `protobuf:"bytes,8,opt,name=mutable_properties,json=mutableProperties,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Properties" json:"mutable_properties" valid:"required~required field MutableProperties missing"`
}

func (m Message) Reset()         { m = Message{} }
func (m Message) String() string { return proto.CompactTextString(m) }
func (Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc77da3b012079a2, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Message.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return m.Size()
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Message)(nil), "modules.identities.internal.transactions.issue.Message")
}

func init() {
	proto.RegisterFile("persistence_sdk/modules/identities/internal/transactions/issue/message.proto", fileDescriptor_dc77da3b012079a2)
}

var fileDescriptor_dc77da3b012079a2 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x41, 0x6b, 0x13, 0x4d,
	0x18, 0xc7, 0x77, 0xf2, 0xf6, 0x4d, 0xe3, 0x7a, 0xd1, 0xb5, 0xd2, 0xe8, 0x61, 0x37, 0x04, 0x0f,
	0x55, 0xda, 0x5d, 0xc1, 0x4b, 0x5b, 0x11, 0x6d, 0x8d, 0x42, 0xd0, 0xa0, 0x56, 0x41, 0x50, 0x34,
	0x4c, 0x76, 0x9f, 0x24, 0x83, 0x3b, 0x3b, 0xe9, 0x3c, 0x13, 0x41, 0xd1, 0xde, 0x44, 0x0f, 0x8a,
	0xfa, 0x0d, 0x8a, 0x17, 0xc1, 0xab, 0x78, 0xf2, 0x2e, 0x3d, 0x78, 0xe8, 0x51, 0x3c, 0x04, 0x49,
	0x2e, 0x9e, 0xf3, 0x09, 0x24, 0xd3, 0x6e, 0x93, 0xd8, 0x68, 0x62, 0xc8, 0x6d, 0x92, 0xdd, 0xff,
	0xb3, 0xbf, 0xdf, 0xfc, 0x07, 0xc6, 0xbc, 0x5a, 0x03, 0x89, 0x0c, 0x15, 0x44, 0x3e, 0x14, 0x31,
	0x78, 0xe0, 0x71, 0x11, 0xd4, 0x43, 0x40, 0x8f, 0x05, 0x10, 0x29, 0xa6, 0x58, 0x67, 0x19, 0x29,
	0x90, 0x11, 0x0d, 0x3d, 0x25, 0x69, 0x84, 0xd4, 0x57, 0x4c, 0x44, 0xe8, 0x31, 0xc4, 0x3a, 0x78,
	0x1c, 0x10, 0x69, 0x05, 0xdc, 0x9a, 0x14, 0x4a, 0x58, 0xee, 0x6e, 0xda, 0xed, 0xa6, 0xdd, 0x38,
	0xed, 0xf6, 0xa6, 0x5d, 0x9d, 0x3e, 0x3e, 0x53, 0x11, 0x15, 0xa1, 0xa3, 0x5e, 0x67, 0xb5, 0x33,
	0x25, 0xfb, 0xfe, 0xa0, 0x39, 0x5d, 0xd8, 0x99, 0x6b, 0xbd, 0x25, 0xe6, 0x54, 0x59, 0x0a, 0x9e,
	0x26, 0x19, 0x32, 0x77, 0x60, 0xf5, 0xe9, 0x56, 0xc3, 0x31, 0xbe, 0x37, 0x9c, 0x4b, 0x15, 0xa6,
	0xaa, 0xf5, 0x92, 0xeb, 0x0b, 0xee, 0xf5, 0x18, 0x5c, 0x8b, 0xa0, 0xf7, 0xe7, 0xcd, 0xdc, 0x15,
	0x0f, 0xfd, 0x2a, 0x70, 0xea, 0xa9, 0x47, 0x35, 0x40, 0xaf, 0x44, 0x11, 0xdc, 0x15, 0xdf, 0x5f,
	0x09, 0x02, 0x09, 0x88, 0xed, 0x86, 0x33, 0xff, 0x90, 0x86, 0x2c, 0x58, 0xce, 0x4a, 0x58, 0xaf,
	0x33, 0x09, 0xc1, 0x46, 0xbc, 0xc8, 0x94, 0x19, 0x84, 0x41, 0xe6, 0xb2, 0x14, 0x3c, 0xc3, 0x19,
	0x22, 0x8b, 0x2a, 0xd9, 0x35, 0x8d, 0x62, 0x7d, 0x24, 0x66, 0x42, 0x89, 0x74, 0x42, 0x13, 0xbd,
	0x23, 0x93, 0x46, 0xba, 0x31, 0x04, 0xe9, 0x96, 0x88, 0x81, 0xe6, 0x33, 0x9c, 0x2a, 0xbf, 0x0a,
	0x38, 0x77, 0xff, 0x2e, 0x5d, 0x78, 0x7c, 0x7a, 0x61, 0xe9, 0xde, 0xa9, 0x13, 0x27, 0x37, 0x58,
	0xa4, 0x27, 0xec, 0xbd, 0x9e, 0x5d, 0x4b, 0x28, 0x61, 0xbd, 0x24, 0x66, 0xaa, 0x83, 0x5f, 0x64,
	0xc5, 0x20, 0xfd, 0x9f, 0x66, 0x97, 0xbb, 0xe8, 0x8b, 0x63, 0xa1, 0xbb, 0xf9, 0x5c, 0xbb, 0xe1,
	0xb8, 0x23, 0x6c, 0x60, 0x3e, 0xd7, 0xdd, 0xc2, 0x64, 0x59, 0xff, 0x61, 0x7d, 0x20, 0xa6, 0xe5,
	0x87, 0x14, 0x91, 0x95, 0x99, 0x4f, 0x3b, 0x87, 0x42, 0x83, 0x4d, 0x69, 0xb0, 0x27, 0x13, 0x00,
	0x5b, 0x1c, 0x02, 0x76, 0xb1, 0xef, 0xe3, 0xbd, 0x88, 0x87, 0xfc, 0xdf, 0x1e, 0x59, 0x5f, 0x89,
	0x79, 0x8c, 0x71, 0x5e, 0x57, 0xb4, 0x14, 0x42, 0x91, 0x83, 0xa2, 0xc5, 0x9a, 0x14, 0x35, 0x90,
	0x9d, 0x13, 0x9e, 0xfe, 0x5f, 0x33, 0xbf, 0x8e, 0x0f, 0x42, 0x6e, 0x3c, 0xe8, 0x02, 0x28, 0x7a,
	0x7d, 0x6f, 0x68, 0xbb, 0xe1, 0x9c, 0x1f, 0x22, 0x90, 0x8f, 0x81, 0xfa, 0x93, 0x5d, 0x8f, 0x59,
	0x36, 0xf8, 0x0d, 0xeb, 0x33, 0x31, 0x67, 0xba, 0x3a, 0x3d, 0x26, 0x49, 0x6d, 0xf2, 0x3c, 0x36,
	0xb9, 0x30, 0x9e, 0x49, 0x9f, 0xc5, 0xd9, 0x51, 0x2d, 0x06, 0x19, 0x1c, 0x61, 0xfb, 0x9f, 0x5a,
	0x5f, 0x88, 0x39, 0xfb, 0xa7, 0x2a, 0xa6, 0xb5, 0xc0, 0xab, 0x49, 0x57, 0x71, 0x6e, 0x88, 0x44,
	0xe1, 0xef, 0x45, 0x1c, 0x1d, 0x5c, 0xc3, 0x27, 0x62, 0x5a, 0x03, 0x4a, 0x48, 0x69, 0x87, 0x67,
	0x93, 0x2c, 0x61, 0x69, 0x34, 0xfe, 0x41, 0xec, 0x87, 0xf7, 0x15, 0xb0, 0x9c, 0x7a, 0xb1, 0xe9,
	0x18, 0x3f, 0x37, 0x1d, 0x63, 0x75, 0x7d, 0xab, 0x69, 0x93, 0xed, 0xa6, 0x4d, 0x7e, 0x34, 0x6d,
	0xf2, 0xa6, 0x65, 0x1b, 0xdb, 0x2d, 0xdb, 0xf8, 0xd6, 0xb2, 0x8d, 0x3b, 0xb7, 0x47, 0xa6, 0xfe,
	0xb7, 0x0b, 0xa7, 0x94, 0xd4, 0x77, 0xc4, 0x99, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xf0,
	0xf0, 0x36, 0xb9, 0x06, 0x00, 0x00,
}

func (m *Message) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Message) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Message) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.MutableProperties.Size()
		i -= size
		if _, err := m.MutableProperties.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	{
		size := m.MutableMetaProperties.Size()
		i -= size
		if _, err := m.MutableMetaProperties.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	{
		size := m.ImmutableProperties.Size()
		i -= size
		if _, err := m.ImmutableProperties.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.ImmutableMetaProperties.Size()
		i -= size
		if _, err := m.ImmutableMetaProperties.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.ClassificationID.Size()
		i -= size
		if _, err := m.ClassificationID.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.FromID.Size()
		i -= size
		if _, err := m.FromID.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.To.Size()
		i -= size
		if _, err := m.To.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.From.Size()
		i -= size
		if _, err := m.From.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Message) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.From.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.To.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.FromID.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.ClassificationID.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.ImmutableMetaProperties.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.ImmutableProperties.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.MutableMetaProperties.Size()
	n += 1 + l + sovMessage(uint64(l))
	l = m.MutableProperties.Size()
	n += 1 + l + sovMessage(uint64(l))
	return n
}

func sovMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessage(x uint64) (n int) {
	return sovMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Message) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Message: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Message: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.From.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.To.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FromID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassificationID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClassificationID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ImmutableMetaProperties.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ImmutableProperties.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MutableMetaProperties.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MutableProperties.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessage = fmt.Errorf("proto: unexpected end of group")
)
