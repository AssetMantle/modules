// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: modules/identities/internal/transactions/deputize/transactionService.v1.proto

package deputize

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("modules/identities/internal/transactions/deputize/transactionService.v1.proto", fileDescriptor_d634afac349eedca)
}

var fileDescriptor_d634afac349eedca = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xf2, 0xcd, 0xcd, 0x4f, 0x29,
	0xcd, 0x49, 0x2d, 0xd6, 0xcf, 0x4c, 0x49, 0xcd, 0x2b, 0xc9, 0x2c, 0xc9, 0x04, 0x31, 0xf3, 0x4a,
	0x52, 0x8b, 0xf2, 0x12, 0x73, 0xf4, 0x4b, 0x8a, 0x12, 0xf3, 0x8a, 0x13, 0x93, 0x4b, 0x32, 0xf3,
	0xf3, 0x8a, 0xf5, 0x53, 0x52, 0x0b, 0x4a, 0x4b, 0x32, 0xab, 0x52, 0x91, 0x45, 0x83, 0x53, 0x8b,
	0xca, 0x32, 0x93, 0x53, 0xf5, 0xca, 0x0c, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x14, 0x10,
	0xc6, 0xe8, 0x21, 0xeb, 0xd6, 0x83, 0xe9, 0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5,
	0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x84, 0x28, 0x00, 0xeb, 0x97, 0x72,
	0x22, 0xdd, 0x39, 0xb9, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0x08, 0x37, 0x48, 0xf9, 0x51, 0xe4, 0xa5,
	0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0x62, 0x84, 0x79, 0x46, 0x0b, 0x19, 0xb9, 0xb8, 0x43, 0x10,
	0x0a, 0x84, 0x26, 0x32, 0x72, 0x71, 0xb8, 0x40, 0x75, 0x0a, 0x69, 0xea, 0x11, 0xf2, 0xb1, 0x9e,
	0x2f, 0xc4, 0x81, 0x52, 0xa6, 0x84, 0x95, 0x86, 0x60, 0xba, 0x43, 0x49, 0xb9, 0xe9, 0xf2, 0x93,
	0xc9, 0x4c, 0xb2, 0x4a, 0xd2, 0xfa, 0xb9, 0x89, 0x79, 0x25, 0x39, 0xa9, 0xc8, 0xde, 0x82, 0x69,
	0x74, 0x3a, 0xcb, 0x74, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31,
	0x4e, 0x78, 0x2c, 0xc7, 0x70, 0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x5c, 0x2a, 0xc9,
	0xf9, 0xb9, 0x04, 0x6d, 0x76, 0x92, 0x0c, 0xc1, 0x88, 0xd5, 0x30, 0xc3, 0x00, 0x90, 0xff, 0x03,
	0x18, 0xa3, 0x02, 0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x1d, 0x8b,
	0x8b, 0x53, 0x4b, 0x7c, 0x21, 0x2e, 0x81, 0x05, 0x34, 0xc9, 0x01, 0xbe, 0x88, 0x89, 0xd9, 0x33,
	0xc4, 0x65, 0x15, 0x93, 0x82, 0x27, 0xc2, 0x5d, 0x21, 0xc8, 0xee, 0x82, 0x85, 0xef, 0x29, 0x64,
	0x25, 0x31, 0xc8, 0x4a, 0x62, 0x60, 0x4a, 0x1e, 0x31, 0xe9, 0x10, 0x52, 0x12, 0xe3, 0x1e, 0xe0,
	0xe4, 0x9b, 0x5a, 0x92, 0x98, 0x92, 0x58, 0x92, 0xf8, 0x8a, 0x49, 0x09, 0xa1, 0xdc, 0xca, 0x0a,
	0x59, 0xbd, 0x95, 0x15, 0x4c, 0x43, 0x12, 0x1b, 0x38, 0xea, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x34, 0xb1, 0xb3, 0x96, 0x1f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	Deputize(ctx context.Context, in *Message, opts ...grpc.CallOption) (*TransactionResponse, error)
}

type transactionClient struct {
	cc grpc1.ClientConn
}

func NewTransactionClient(cc grpc1.ClientConn) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) Deputize(ctx context.Context, in *Message, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/identities.transactions.deputize.Transaction/Deputize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	Deputize(context.Context, *Message) (*TransactionResponse, error)
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) Deputize(ctx context.Context, req *Message) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deputize not implemented")
}

func RegisterTransactionServer(s grpc1.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_Deputize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).Deputize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/identities.transactions.deputize.Transaction/Deputize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).Deputize(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "identities.transactions.deputize.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Deputize",
			Handler:    _Transaction_Deputize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modules/identities/internal/transactions/deputize/transactionService.v1.proto",
}
