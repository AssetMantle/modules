// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: modules/identities/internal/transactions/define/transactioneRequest.v1.proto

package define

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type TransactionRequest struct {
	From                    string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	FromID                  string `protobuf:"bytes,2,opt,name=from_i_d,json=fromID,proto3" json:"from_i_d,omitempty"`
	ImmutableMetaProperties string `protobuf:"bytes,3,opt,name=immutable_meta_properties,json=immutableMetaProperties,proto3" json:"immutable_meta_properties,omitempty"`
	ImmutableProperties     string `protobuf:"bytes,4,opt,name=immutable_properties,json=immutableProperties,proto3" json:"immutable_properties,omitempty"`
	MutableMetaProperties   string `protobuf:"bytes,5,opt,name=mutable_meta_properties,json=mutableMetaProperties,proto3" json:"mutable_meta_properties,omitempty"`
	MutableProperties       string `protobuf:"bytes,6,opt,name=mutable_properties,json=mutableProperties,proto3" json:"mutable_properties,omitempty"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a97880158b3498d9, []int{0}
}
func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TransactionRequest)(nil), "identities.transactions.define.TransactionRequest")
}

func init() {
	proto.RegisterFile("modules/identities/internal/transactions/define/transactioneRequest.v1.proto", fileDescriptor_a97880158b3498d9)
}

var fileDescriptor_a97880158b3498d9 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xe3, 0x40,
	0x14, 0x80, 0x93, 0xb4, 0x5b, 0x76, 0xe7, 0xb6, 0xb3, 0x5d, 0x1a, 0x7b, 0x18, 0x4b, 0x4f, 0x22,
	0x98, 0x50, 0x04, 0x0f, 0xb9, 0x59, 0x0a, 0x52, 0xb0, 0x12, 0x4a, 0xf0, 0x20, 0x85, 0x30, 0x6d,
	0xa6, 0x75, 0x20, 0xc9, 0xd4, 0x64, 0xe2, 0x6f, 0xf0, 0xe8, 0x2f, 0x10, 0xf1, 0xe8, 0xcf, 0xf0,
	0x24, 0x9e, 0x7a, 0xf4, 0x28, 0xe9, 0xcd, 0x5f, 0x21, 0x33, 0xd1, 0x66, 0xa0, 0xb5, 0xe0, 0x29,
	0x2f, 0x33, 0xdf, 0xf7, 0xde, 0xe3, 0xcd, 0x03, 0xa7, 0x11, 0x0b, 0xb2, 0x90, 0xa4, 0x36, 0x0d,
	0x48, 0xcc, 0x29, 0xa7, 0x22, 0x8c, 0x39, 0x49, 0x62, 0x1c, 0xda, 0x3c, 0xc1, 0x71, 0x8a, 0x27,
	0x9c, 0xb2, 0x38, 0xb5, 0x03, 0x32, 0xa5, 0x31, 0x51, 0xcf, 0xc8, 0x90, 0x5c, 0x65, 0x24, 0xe5,
	0xd6, 0x75, 0xc7, 0x9a, 0x27, 0x8c, 0x33, 0x88, 0xca, 0x2c, 0x96, 0x2a, 0x5b, 0x85, 0xdc, 0xac,
	0xcf, 0xd8, 0x8c, 0x49, 0xd4, 0x16, 0x51, 0x61, 0xb5, 0xef, 0x0c, 0x00, 0xbd, 0x92, 0xfe, 0xcc,
	0x0a, 0x21, 0xa8, 0x4e, 0x13, 0x16, 0x99, 0x7a, 0x4b, 0xdf, 0xfb, 0x33, 0x94, 0x31, 0x34, 0xc1,
	0x6f, 0xf1, 0xf5, 0xa9, 0x1f, 0x98, 0x86, 0x3c, 0xaf, 0x89, 0xff, 0x7e, 0x0f, 0x3a, 0x60, 0x87,
	0x46, 0x51, 0xc6, 0xf1, 0x38, 0x24, 0x7e, 0x44, 0x38, 0xf6, 0xe7, 0x09, 0x9b, 0x93, 0x44, 0xf4,
	0x62, 0x56, 0x24, 0xda, 0x58, 0x01, 0x03, 0xc2, 0xb1, 0xbb, 0xba, 0x86, 0x1d, 0x50, 0x2f, 0x5d,
	0x45, 0xab, 0x4a, 0xed, 0xdf, 0xea, 0x4e, 0x51, 0x8e, 0x40, 0xe3, 0xbb, 0x62, 0xbf, 0xa4, 0xf5,
	0x7f, 0x73, 0xa9, 0x03, 0x00, 0x37, 0x14, 0xaa, 0x49, 0xe5, 0xef, 0x5a, 0x19, 0xa7, 0x7a, 0x73,
	0xbf, 0xab, 0x75, 0x9f, 0x8c, 0xe7, 0x1c, 0xe9, 0x8b, 0x1c, 0xe9, 0x6f, 0x39, 0xd2, 0x6f, 0x97,
	0x48, 0x5b, 0x2c, 0x91, 0xf6, 0xba, 0x44, 0x1a, 0x68, 0x4f, 0x58, 0x64, 0x6d, 0x9f, 0x7a, 0xb7,
	0xe9, 0xad, 0xbf, 0xd9, 0x79, 0xc7, 0x15, 0xb3, 0x77, 0xf5, 0x8b, 0xb3, 0x19, 0xe5, 0x97, 0xd9,
	0xd8, 0x9a, 0xb0, 0xc8, 0x3e, 0x4e, 0x53, 0xc2, 0x07, 0x38, 0xe6, 0x21, 0xb1, 0xbf, 0x16, 0xe3,
	0x87, 0x0b, 0xf2, 0x60, 0x54, 0xfa, 0x5e, 0xef, 0xd1, 0x40, 0xfd, 0xb2, 0x29, 0x4f, 0x6d, 0xaa,
	0x27, 0xb1, 0x17, 0x15, 0x18, 0xa9, 0xc0, 0xa8, 0x00, 0x72, 0x63, 0x7f, 0x3b, 0x30, 0x3a, 0x71,
	0xbb, 0x62, 0xb8, 0x01, 0xe6, 0xf8, 0xdd, 0x68, 0x95, 0xb0, 0xe3, 0xa8, 0xb4, 0xe3, 0x14, 0xf8,
	0xb8, 0x26, 0x97, 0xed, 0xf0, 0x23, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xf2, 0x6e, 0xd6, 0xf2, 0x02,
	0x00, 0x00,
}

func (m *TransactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MutableProperties) > 0 {
		i -= len(m.MutableProperties)
		copy(dAtA[i:], m.MutableProperties)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.MutableProperties)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MutableMetaProperties) > 0 {
		i -= len(m.MutableMetaProperties)
		copy(dAtA[i:], m.MutableMetaProperties)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.MutableMetaProperties)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ImmutableProperties) > 0 {
		i -= len(m.ImmutableProperties)
		copy(dAtA[i:], m.ImmutableProperties)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.ImmutableProperties)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ImmutableMetaProperties) > 0 {
		i -= len(m.ImmutableMetaProperties)
		copy(dAtA[i:], m.ImmutableMetaProperties)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.ImmutableMetaProperties)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FromID) > 0 {
		i -= len(m.FromID)
		copy(dAtA[i:], m.FromID)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.FromID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTransactioneRequestV1(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTransactioneRequestV1(dAtA []byte, offset int, v uint64) int {
	offset -= sovTransactioneRequestV1(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TransactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	l = len(m.FromID)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	l = len(m.ImmutableMetaProperties)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	l = len(m.ImmutableProperties)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	l = len(m.MutableMetaProperties)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	l = len(m.MutableProperties)
	if l > 0 {
		n += 1 + l + sovTransactioneRequestV1(uint64(l))
	}
	return n
}

func sovTransactioneRequestV1(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTransactioneRequestV1(x uint64) (n int) {
	return sovTransactioneRequestV1(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TransactionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTransactioneRequestV1
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImmutableMetaProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImmutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImmutableProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableMetaProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MutableMetaProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutableProperties", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MutableProperties = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTransactioneRequestV1(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTransactioneRequestV1
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTransactioneRequestV1(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTransactioneRequestV1
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTransactioneRequestV1
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTransactioneRequestV1
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTransactioneRequestV1
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTransactioneRequestV1
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTransactioneRequestV1        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTransactioneRequestV1          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTransactioneRequestV1 = fmt.Errorf("proto: unexpected end of group")
)
