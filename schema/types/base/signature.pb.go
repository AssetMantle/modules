// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: persistence_sdk/schema/types/base/signature.proto

package base

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_persistenceOne_persistenceSDK_schema_types "github.com/persistenceOne/persistenceSDK/schema/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Signature struct {
	Id             github_com_persistenceOne_persistenceSDK_schema_types.ID     `protobuf:"bytes,1,opt,name=id,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.ID" json:"id"`
	SignatureBytes []byte                                                       `protobuf:"bytes,2,opt,name=signature_bytes,json=signatureBytes,proto3" json:"signature_bytes,omitempty"`
	ValidityHeight github_com_persistenceOne_persistenceSDK_schema_types.Height `protobuf:"bytes,3,opt,name=validity_height,json=validityHeight,proto3,customtype=github.com/persistenceOne/persistenceSDK/schema/types.Height" json:"validity_height"`
}

func (m *Signature) Reset()      { *m = Signature{} }
func (*Signature) ProtoMessage() {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_8496c3b012a7e5a2, []int{0}
}
func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSignatureBytes() []byte {
	if m != nil {
		return m.SignatureBytes
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "schema.types.base.Signature")
}

func init() {
	proto.RegisterFile("persistence_sdk/schema/types/base/signature.proto", fileDescriptor_8496c3b012a7e5a2)
}

var fileDescriptor_8496c3b012a7e5a2 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2c, 0x48, 0x2d, 0x2a,
	0xce, 0x2c, 0x2e, 0x49, 0xcd, 0x4b, 0x4e, 0x8d, 0x2f, 0x4e, 0xc9, 0xd6, 0x2f, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0xd4, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x4f, 0x4a, 0x2c, 0x4e, 0xd5, 0x2f, 0xce,
	0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x84,
	0x28, 0xd1, 0x03, 0x2b, 0xd1, 0x03, 0x29, 0x91, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xcb, 0xea,
	0x83, 0x58, 0x10, 0x85, 0x4a, 0xed, 0x4c, 0x5c, 0x9c, 0xc1, 0x30, 0xcd, 0x42, 0x01, 0x5c, 0x4c,
	0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x4e, 0x0e, 0x27, 0xee, 0xc9, 0x33, 0xdc, 0xba,
	0x27, 0x6f, 0x91, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x8f, 0xe4, 0x10,
	0xff, 0xbc, 0x54, 0x64, 0x6e, 0xb0, 0x8b, 0x37, 0x8a, 0xb3, 0xf4, 0x3c, 0x5d, 0x82, 0x98, 0x32,
	0x53, 0x84, 0xd4, 0xb9, 0xf8, 0xe1, 0x6e, 0x8b, 0x4f, 0xaa, 0x2c, 0x49, 0x2d, 0x96, 0x60, 0x52,
	0x60, 0xd4, 0xe0, 0x09, 0xe2, 0x83, 0x0b, 0x3b, 0x81, 0x44, 0x85, 0x72, 0xb9, 0xf8, 0xcb, 0x12,
	0x73, 0x32, 0x53, 0x32, 0x4b, 0x2a, 0xe3, 0x33, 0x52, 0x33, 0xd3, 0x33, 0x4a, 0x24, 0x98, 0xc1,
	0xee, 0x70, 0x81, 0xba, 0xc3, 0x86, 0x3c, 0x77, 0x78, 0x80, 0xcd, 0x0a, 0xe2, 0x83, 0x19, 0x0e,
	0xe1, 0x5b, 0x09, 0xcc, 0x58, 0x20, 0xcf, 0xd0, 0xb1, 0x50, 0x9e, 0x61, 0xc2, 0x42, 0x79, 0x86,
	0x05, 0x0b, 0xe5, 0x19, 0x9c, 0x42, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1,
	0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21,
	0xca, 0x8a, 0x2c, 0x9b, 0xc1, 0x11, 0x93, 0xc4, 0x06, 0x0e, 0x66, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x40, 0xee, 0xb2, 0xc4, 0x01, 0x00, 0x00,
}
