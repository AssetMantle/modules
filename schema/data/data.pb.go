// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: schema/data/data.proto

package data

import (
	base "github.com/AssetMantle/modules/schema/data/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Impl:
	//	*Data_AccAddressData
	//	*Data_BooleanData
	//	*Data_DecData
	//	*Data_HeightData
	//	*Data_IdData
	//	*Data_ListData
	//	*Data_StringData
	Impl isData_Impl `protobuf_oneof:"impl"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_data_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_schema_data_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_schema_data_data_proto_rawDescGZIP(), []int{0}
}

func (m *Data) GetImpl() isData_Impl {
	if m != nil {
		return m.Impl
	}
	return nil
}

func (x *Data) GetAccAddressData() *base.AccAddressData {
	if x, ok := x.GetImpl().(*Data_AccAddressData); ok {
		return x.AccAddressData
	}
	return nil
}

func (x *Data) GetBooleanData() *base.BooleanData {
	if x, ok := x.GetImpl().(*Data_BooleanData); ok {
		return x.BooleanData
	}
	return nil
}

func (x *Data) GetDecData() *base.DecData {
	if x, ok := x.GetImpl().(*Data_DecData); ok {
		return x.DecData
	}
	return nil
}

func (x *Data) GetHeightData() *base.HeightData {
	if x, ok := x.GetImpl().(*Data_HeightData); ok {
		return x.HeightData
	}
	return nil
}

func (x *Data) GetIdData() *base.IDData {
	if x, ok := x.GetImpl().(*Data_IdData); ok {
		return x.IdData
	}
	return nil
}

func (x *Data) GetListData() *base.ListData {
	if x, ok := x.GetImpl().(*Data_ListData); ok {
		return x.ListData
	}
	return nil
}

func (x *Data) GetStringData() *base.StringData {
	if x, ok := x.GetImpl().(*Data_StringData); ok {
		return x.StringData
	}
	return nil
}

type isData_Impl interface {
	isData_Impl()
}

type Data_AccAddressData struct {
	AccAddressData *base.AccAddressData `protobuf:"bytes,1,opt,name=accAddressData,proto3,oneof"`
}

type Data_BooleanData struct {
	BooleanData *base.BooleanData `protobuf:"bytes,2,opt,name=booleanData,proto3,oneof"`
}

type Data_DecData struct {
	DecData *base.DecData `protobuf:"bytes,3,opt,name=decData,proto3,oneof"`
}

type Data_HeightData struct {
	HeightData *base.HeightData `protobuf:"bytes,4,opt,name=heightData,proto3,oneof"`
}

type Data_IdData struct {
	IdData *base.IDData `protobuf:"bytes,5,opt,name=idData,proto3,oneof"`
}

type Data_ListData struct {
	ListData *base.ListData `protobuf:"bytes,6,opt,name=listData,proto3,oneof"`
}

type Data_StringData struct {
	StringData *base.StringData `protobuf:"bytes,7,opt,name=stringData,proto3,oneof"`
}

func (*Data_AccAddressData) isData_Impl() {}

func (*Data_BooleanData) isData_Impl() {}

func (*Data_DecData) isData_Impl() {}

func (*Data_HeightData) isData_Impl() {}

func (*Data_IdData) isData_Impl() {}

func (*Data_ListData) isData_Impl() {}

func (*Data_StringData) isData_Impl() {}

var File_schema_data_data_proto protoreflect.FileDescriptor

var file_schema_data_data_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x25,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x61, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x64, 0x65, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x69,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xee, 0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6c,
	0x65, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26,
	0x0a, 0x06, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06,
	0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6d, 0x70, 0x6c,
	0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x74, 0x6c, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_data_data_proto_rawDescOnce sync.Once
	file_schema_data_data_proto_rawDescData = file_schema_data_data_proto_rawDesc
)

func file_schema_data_data_proto_rawDescGZIP() []byte {
	file_schema_data_data_proto_rawDescOnce.Do(func() {
		file_schema_data_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_data_data_proto_rawDescData)
	})
	return file_schema_data_data_proto_rawDescData
}

var file_schema_data_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_schema_data_data_proto_goTypes = []interface{}{
	(*Data)(nil),                // 0: base.Data
	(*base.AccAddressData)(nil), // 1: base.AccAddressData
	(*base.BooleanData)(nil),    // 2: base.BooleanData
	(*base.DecData)(nil),        // 3: base.DecData
	(*base.HeightData)(nil),     // 4: base.HeightData
	(*base.IDData)(nil),         // 5: base.IDData
	(*base.ListData)(nil),       // 6: base.ListData
	(*base.StringData)(nil),     // 7: base.StringData
}
var file_schema_data_data_proto_depIdxs = []int32{
	1, // 0: base.Data.accAddressData:type_name -> base.AccAddressData
	2, // 1: base.Data.booleanData:type_name -> base.BooleanData
	3, // 2: base.Data.decData:type_name -> base.DecData
	4, // 3: base.Data.heightData:type_name -> base.HeightData
	5, // 4: base.Data.idData:type_name -> base.IDData
	6, // 5: base.Data.listData:type_name -> base.ListData
	7, // 6: base.Data.stringData:type_name -> base.StringData
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_schema_data_data_proto_init() }
func file_schema_data_data_proto_init() {
	if File_schema_data_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_data_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schema_data_data_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Data_AccAddressData)(nil),
		(*Data_BooleanData)(nil),
		(*Data_DecData)(nil),
		(*Data_HeightData)(nil),
		(*Data_IdData)(nil),
		(*Data_ListData)(nil),
		(*Data_StringData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_data_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_data_data_proto_goTypes,
		DependencyIndexes: file_schema_data_data_proto_depIdxs,
		MessageInfos:      file_schema_data_data_proto_msgTypes,
	}.Build()
	File_schema_data_data_proto = out.File
	file_schema_data_data_proto_rawDesc = nil
	file_schema_data_data_proto_goTypes = nil
	file_schema_data_data_proto_depIdxs = nil
}
