// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: AssetMantle/modules/x/orders/transactions/put/service.proto

package put

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("AssetMantle/modules/x/orders/transactions/put/service.proto", fileDescriptor_ca7dda5a8ae78412)
}

var fileDescriptor_ca7dda5a8ae78412 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x31, 0x4b, 0xe4, 0x40,
	0x14, 0xc7, 0x93, 0x1c, 0xb7, 0x45, 0xb8, 0x6a, 0x9b, 0x83, 0x70, 0xa4, 0xb8, 0x52, 0x70, 0x86,
	0x5d, 0x41, 0x74, 0xac, 0x36, 0x8d, 0xdb, 0x84, 0x0d, 0xba, 0x45, 0x90, 0x80, 0xcc, 0x26, 0x43,
	0x0c, 0x24, 0x99, 0x90, 0xf7, 0xb2, 0x6c, 0x69, 0x65, 0x6d, 0xe3, 0x17, 0xb0, 0xb4, 0xf2, 0x63,
	0x88, 0xd5, 0x96, 0x96, 0x92, 0x2d, 0x04, 0x1b, 0xbf, 0x82, 0xec, 0x66, 0xc0, 0x6c, 0x39, 0x55,
	0xe0, 0xe5, 0xff, 0x7b, 0xf3, 0x9b, 0x37, 0xcf, 0x3e, 0x9b, 0x00, 0x08, 0xf4, 0x79, 0x89, 0xb9,
	0xa0, 0x85, 0x4c, 0x9a, 0x5c, 0x00, 0x5d, 0x51, 0x59, 0x27, 0xa2, 0x06, 0x8a, 0x35, 0x2f, 0x81,
	0xc7, 0x98, 0xc9, 0x12, 0x68, 0xd5, 0x20, 0x05, 0x51, 0x2f, 0xb3, 0x58, 0x90, 0xaa, 0x96, 0x28,
	0x87, 0x87, 0x3d, 0x98, 0x28, 0x98, 0xac, 0x48, 0x07, 0x93, 0x3e, 0x4c, 0xaa, 0x06, 0x9d, 0xbf,
	0xb1, 0x84, 0x42, 0x02, 0x2d, 0x20, 0xa5, 0xcb, 0xd1, 0xf6, 0xd3, 0xf5, 0x71, 0xfe, 0xa5, 0x52,
	0xa6, 0xb9, 0xa0, 0xbc, 0xca, 0x28, 0x2f, 0x4b, 0x89, 0x5c, 0x41, 0xbb, 0xbf, 0x9a, 0x8a, 0x85,
	0x00, 0xe0, 0xa9, 0x52, 0x74, 0xa6, 0x7a, 0x70, 0xaf, 0x70, 0x5d, 0x0b, 0xa8, 0x64, 0x09, 0xaa,
	0xd3, 0xf8, 0xc1, 0xb4, 0x7f, 0xf9, 0x90, 0x0e, 0xef, 0x4c, 0x7b, 0x30, 0xe5, 0x65, 0x92, 0x8b,
	0xe1, 0x31, 0xd1, 0x1a, 0x00, 0xf1, 0x3b, 0x35, 0xc7, 0xd3, 0xe4, 0xe6, 0x3f, 0x85, 0x0b, 0x25,
	0xf5, 0xdf, 0x70, 0x7e, 0xdf, 0x7e, 0x3c, 0x1f, 0x98, 0xde, 0x97, 0xf5, 0xd2, 0xba, 0xe6, 0xba,
	0x75, 0xcd, 0xf7, 0xd6, 0x35, 0xef, 0x37, 0xae, 0xb1, 0xde, 0xb8, 0xc6, 0xdb, 0xc6, 0x35, 0xec,
	0x51, 0x2c, 0x0b, 0xbd, 0xa3, 0xbc, 0x3f, 0x97, 0xdd, 0x0b, 0x07, 0xdb, 0x3b, 0x07, 0xe6, 0xd5,
	0x49, 0x9a, 0xe1, 0x4d, 0xb3, 0x20, 0xb1, 0x2c, 0xa8, 0xd6, 0x28, 0x1f, 0xad, 0xc1, 0xc4, 0x0f,
	0x67, 0xf3, 0xe0, 0xc9, 0xda, 0x5b, 0x13, 0x5f, 0x29, 0x84, 0x64, 0xd6, 0x29, 0xcc, 0xfb, 0x0a,
	0x41, 0x83, 0xaf, 0x7b, 0xf9, 0x48, 0xe5, 0xa3, 0x30, 0xea, 0xf2, 0x51, 0x3f, 0x1f, 0x05, 0x0d,
	0xb6, 0xd6, 0xa9, 0x56, 0x3e, 0x3a, 0x0f, 0x3c, 0x5f, 0x20, 0x4f, 0x38, 0xf2, 0x4f, 0x6b, 0xdc,
	0x63, 0x19, 0x53, 0x30, 0x63, 0x21, 0x63, 0x1d, 0xce, 0x58, 0x9f, 0x67, 0x2c, 0x68, 0x70, 0x31,
	0xd8, 0x2d, 0xc4, 0xd1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x73, 0xed, 0xbb, 0x3c, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	Handle(ctx context.Context, in *Message, opts ...grpc.CallOption) (*TransactionResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Handle(ctx context.Context, in *Message, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/AssetMantle.modules.x.orders.transactions.put.Msg/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	Handle(context.Context, *Message) (*TransactionResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Handle(ctx context.Context, req *Message) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handle not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AssetMantle.modules.x.orders.transactions.put.Msg/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Handle(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AssetMantle.modules.x.orders.transactions.put.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handle",
			Handler:    _Msg_Handle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "AssetMantle/modules/x/orders/transactions/put/service.proto",
}
